import { useEffect, useCallback } from 'react';import { localDataStorage } from '../services/localDataStorage';import { getTodayIdentifier } from '../utils/dateUtils';export const useStreakTracker = (currentUser, currentStreak, saveUserData, checkStreakBadges) => {  const updateStreak = useCallback(() => {    if (!currentUser) return;    const today = getTodayIdentifier();    const lastPlayed = localDataStorage.getItem(`lastPlayed_${currentUser}`);    let newStreak = currentStreak;    if (lastPlayed) {      const diffDays = Math.floor((new Date(today).getTime() - new Date(lastPlayed).getTime()) / (1000 * 60 * 60 * 24));      if (diffDays === 1) {        newStreak += 1;      } else if (diffDays > 1) {        newStreak = 1; // Break in streak      }      // If diffDays is 0, it means played on the same day, streak doesn't change    } else {      newStreak = 1; // First play, start streak    }    if (newStreak !== currentStreak) {      saveUserData({ streak: newStreak });      checkStreakBadges(newStreak);    }    localDataStorage.setItem(`lastPlayed_${currentUser}`, today);  }, [currentUser, currentStreak, saveUserData, checkStreakBadges]);  useEffect(() => {    updateStreak();  }, [currentUser, updateStreak]);};