import React, { useState, useEffect, useCallback } from 'react';import { firestoreService } from '../services/firestoreService';const processLeaderboardData = (usersData) => {  return usersData    .filter(user => typeof user.points === 'number')    .sort((a, b) => b.points - a.points)    .slice(0, 10)    .map((user, index) => ({      rank: index + 1,      username: user.username || user.id,      points: user.points,    }));};const LeaderboardTable = ({ leaderboard }) => (  <table className="table table-striped">    <thead>      <tr>        <th>Rank</th>        <th>Username</th>        <th>Points</th>      </tr>    </thead>    <tbody>      {leaderboard.length === 0 ? (        <tr>          <td colSpan="3">No data available yet.</td>        </tr>      ) : (        leaderboard.map((entry) => (          <tr key={entry.id || entry.rank}>            <td>{entry.rank}</td>            <td>{entry.username}</td>            <td>{entry.points}</td>          </tr>        ))      )}    </tbody>  </table>);const Leaderboard = () => {  const [leaderboard, setLeaderboard] = useState([]);  const [loading, setLoading] = useState(true);  const [error, setError] = useState(null);  const fetchLeaderboard = useCallback(async () => {    try {      setLoading(true);      setError(null);      const usersData = await firestoreService.getLeaderboardData();      const sortedLeaderboard = processLeaderboardData(usersData);      setLeaderboard(sortedLeaderboard);    } catch (err) {      console.error('Error fetching leaderboard:', err);      setError('Failed to load leaderboard. Please try again later.');    } finally {      setLoading(false);    }  }, []);  useEffect(() => {    fetchLeaderboard();  }, [fetchLeaderboard]);  if (loading) {    return <div className="container mt-4 text-trivia-gold">Loading leaderboard...</div>;  }  if (error) {    return <div className="container mt-4 text-red-500">Error: {error}</div>;  }  return (    <div className="container mt-4">      <h2 className="text-4xl font-bold text-trivia-gold mb-6">Leaderboard</h2>      <LeaderboardTable leaderboard={leaderboard} />    </div>  );};export default Leaderboard;