import React, { useState, useEffect, useCallback } from 'react';import { authService } from '../services/authService';import { useAuth } from '../context/AuthContext';import { useNavigate } from 'react-router-dom';import { useNotifications } from '../context/NotificationContext'; // Import useNotificationsconst Login = () => {  const [username, setUsername] = useState('');  const [password, setPassword] = useState('');  const [isSignup, setIsSignup] = useState(false);  const { login: authContextLogin } = useAuth();  const { addNotification } = useNotifications(); // Use the notifications hook  const navigate = useNavigate();  useEffect(() => {    // Clear form fields and notifications when switching between login/signup    setUsername('');    setPassword('');  }, [isSignup]);  const handleSubmit = useCallback(async (e) => {    e.preventDefault();    let result;    if (isSignup) {      result = await authService.signup(username, password);    } else {      result = await authService.login(username, password);    }    if (result.success) {      addNotification(result.message || (isSignup ? 'Account created successfully!' : 'Login successful!'), 'success');      if (!isSignup) {        authContextLogin(username);        navigate('/');      } else {        setIsSignup(false);        setUsername('');        setPassword('');      }    } else {      addNotification(result.message, 'error');    }  }, [username, password, isSignup, authContextLogin, navigate, addNotification]);  const toggleSignup = useCallback(() => {    setIsSignup(prev => !prev);    setUsername('');    setPassword('');  }, []);  return (    <div className="container mt-4">      <h1>Trivia Quiz {isSignup ? 'Sign Up' : 'Login'}</h1>      <form onSubmit={handleSubmit}>        <div className="mb-3">          <label htmlFor="username" className="form-label">            Username          </label>          <input            type="text"            className="form-control"            id="username"            value={username}            onChange={(e) => setUsername(e.target.value)}            required          />        </div>        <div className="mb-3">          <label htmlFor="password" className="form-label">            Password          </label>          <input            type="password"            className="form-control"            id="password"            value={password}            onChange={(e) => setPassword(e.target.value)}            required          />        </div>        <button type="submit" className="btn btn-primary">          {isSignup ? 'Sign Up' : 'Login'}        </button>        <button type="button" className="btn btn-secondary ms-2" onClick={toggleSignup}>          {isSignup ? 'Switch to Login' : 'Sign Up'}        </button>      </form>    </div>  );};export default Login;